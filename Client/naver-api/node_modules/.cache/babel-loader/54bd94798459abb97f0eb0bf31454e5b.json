{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sorio\\\\Desktop\\\\click\\\\naver-api\\\\src\\\\App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Map as NaverMap, withNavermaps } from \"react-naver-maps\";\nimport Loadable from \"react-loadable\";\nimport loadJs from \"load-js\";\nconst CLIENT_ID = \"pg43l9dp5c\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const navermaps = window.naver.maps;\n    this.state = {\n      zoom: 12,\n      center: new navermaps.LatLng(37.3595704, 127.105399)\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(NaverMap, {\n      style: {\n        width: \"400px\",\n        height: \"500px\"\n      },\n      zoom: this.state.zoom,\n      onZoomChanged: zoom => {\n        this.setState({\n          zoom\n        });\n      },\n      center: this.state.center,\n      onCenterChanged: center => {\n        this.setState({\n          center\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    });\n  }\n\n} // use react-loadable component\n\n\nconst NaverMapsLoadable = Loadable({\n  loader: () => loadJs(`https://openapi.map.naver.com/openapi/v3/maps.js?clientId=${CLIENT_ID}`).then(() => window.naver.maps),\n\n  render(navermaps, props) {\n    return /*#__PURE__*/React.createElement(App, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  loading(props) {\n    if (props.error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }\n      }, \"Error!\");\n    } else if (props.pastDelay) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return null;\n    }\n  }\n\n});\nReactDOM.render( /*#__PURE__*/React.createElement(NaverMapsLoadable, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/sorio/Desktop/click/naver-api/src/App.js"],"names":["React","ReactDOM","Map","NaverMap","withNavermaps","Loadable","loadJs","CLIENT_ID","App","Component","constructor","props","navermaps","window","naver","maps","state","zoom","center","LatLng","render","width","height","setState","NaverMapsLoadable","loader","then","loading","error","pastDelay","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,GAAG,IAAIC,QAAhB,EAA0BC,aAA1B,QAA+C,kBAA/C;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AAEA,MAAMC,SAAS,GAAG,YAAlB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,UAAMC,SAAS,GAAGC,MAAM,CAACC,KAAP,CAAaC,IAA/B;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,MAAM,EAAE,IAAIN,SAAS,CAACO,MAAd,CAAqB,UAArB,EAAiC,UAAjC;AAFG,KAAb;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OADT;AAEE,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,IAFnB;AAGE,MAAA,aAAa,EAAGA,IAAD,IAAU;AACvB,aAAKM,QAAL,CAAc;AAAEN,UAAAA;AAAF,SAAd;AACD,OALH;AAME,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MANrB;AAOE,MAAA,eAAe,EAAGA,MAAD,IAAY;AAC3B,aAAKK,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD;;AA1B+B,C,CA6BlC;;;AACA,MAAMM,iBAAiB,GAAGnB,QAAQ,CAAC;AACjCoB,EAAAA,MAAM,EAAE,MACNnB,MAAM,CACH,6DAA4DC,SAAU,EADnE,CAAN,CAEEmB,IAFF,CAEO,MAAMb,MAAM,CAACC,KAAP,CAAaC,IAF1B,CAF+B;;AAMjCK,EAAAA,MAAM,CAACR,SAAD,EAAYD,KAAZ,EAAmB;AACvB,wBAAO,oBAAC,GAAD,oBAASA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GARgC;;AAUjCgB,EAAAA,OAAO,CAAChB,KAAD,EAAQ;AACb,QAAIA,KAAK,CAACiB,KAAV,EAAiB;AACf,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,KAFD,MAEO,IAAIjB,KAAK,CAACkB,SAAV,EAAqB;AAC1B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,aAAO,IAAP;AACD;AACF;;AAlBgC,CAAD,CAAlC;AAqBA5B,QAAQ,CAACmB,MAAT,eAAgB,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAuCU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAvC","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Map as NaverMap, withNavermaps } from \"react-naver-maps\";\nimport Loadable from \"react-loadable\";\nimport loadJs from \"load-js\";\n\nconst CLIENT_ID = \"pg43l9dp5c\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const navermaps = window.naver.maps;\n\n    this.state = {\n      zoom: 12,\n      center: new navermaps.LatLng(37.3595704, 127.105399),\n    };\n  }\n\n  render() {\n    return (\n      <NaverMap\n        style={{ width: \"400px\", height: \"500px\" }}\n        zoom={this.state.zoom}\n        onZoomChanged={(zoom) => {\n          this.setState({ zoom });\n        }}\n        center={this.state.center}\n        onCenterChanged={(center) => {\n          this.setState({ center });\n        }}\n      />\n    );\n  }\n}\n\n// use react-loadable component\nconst NaverMapsLoadable = Loadable({\n  loader: () =>\n    loadJs(\n      `https://openapi.map.naver.com/openapi/v3/maps.js?clientId=${CLIENT_ID}`\n    ).then(() => window.naver.maps),\n\n  render(navermaps, props) {\n    return <App {...props} />;\n  },\n\n  loading(props) {\n    if (props.error) {\n      return <div>Error!</div>;\n    } else if (props.pastDelay) {\n      return <div>Loading...</div>;\n    } else {\n      return null;\n    }\n  },\n});\n\nReactDOM.render(<NaverMapsLoadable />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}