{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sorio\\\\Desktop\\\\click\\\\naver-api\\\\src\\\\App.js\";\nimport { RenderAfterNavermapsLoaded, NaverMap, Rectangle } from \"react-naver-maps\";\nimport { withNavermaps } from \"react-naver-maps/hocs\";\nimport React from \"react\";\n\nconst Rect = props => /*#__PURE__*/React.createElement(Rectangle, Object.assign({\n  strokeOpacity: 0,\n  strokeWeight: 0,\n  fillOpacity: 0.2,\n  fillColor: \"#f00\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      navermaps\n    } = props;\n    this.state = {\n      rect: null\n    };\n    this.handleBoundsChanged = this.handleBoundsChanged.bind(this);\n    this.goToDokdo = this.goToDokdo.bind(this);\n    this.dokdo = new navermaps.LatLngBounds(new navermaps.LatLng(37.2380651, 131.8562652), new navermaps.LatLng(37.2444436, 131.8786475));\n  }\n\n  changeBounds(bounds) {\n    this.setState({\n      bounds\n    });\n    if (this.rectTimeout) clearTimeout(this.rectTimeout);\n    this.rectTimeout = setTimeout(() => {\n      this.setState({\n        rect: /*#__PURE__*/React.createElement(Rect, {\n          bounds: this.state.bounds,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }\n        })\n      });\n    }, 500);\n  }\n\n  goToDokdo() {\n    this.setState({\n      bounds: this.dokdo\n    });\n  }\n\n  handleBoundsChanged(bounds) {\n    this.changeBounds(bounds);\n  }\n\n  render() {\n    const {\n      navermaps\n    } = this.props;\n    return /*#__PURE__*/React.createElement(NaverMap, {\n      naverRef: ref => {\n        this.mapRef = ref;\n      },\n      id: \"maps-examples-map-bounds\",\n      style: {\n        width: \"100%\",\n        height: \"600px\"\n      },\n      defaultCenter: new navermaps.LatLng(37.5666805, 126.9784147),\n      defaultZoom: 5,\n      bounds: this.state.bounds,\n      onBoundsChanged: this.handleBoundsChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Buttons, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ControlBtn, {\n      onClick: this.goToDokdo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"\\uB3C5\\uB3C4\\uB85C \\uC774\\uB3D9\\uD558\\uAE30\")), this.state.rect);\n  }\n\n  componentDidMount() {\n    // map이 생성될 때의 bounds를 알기 위해 method를 이용합니다.\n    this.changeBounds(this.mapRef.getBounds());\n  }\n\n}\n\nconst EnhancedApp = withNavermaps(App);\n\n/*#__PURE__*/\nReact.createElement(RenderAfterNavermapsLoaded, {\n  clientId: \"pg43l9dp5c\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(EnhancedApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }\n}));\nexport default App;","map":{"version":3,"sources":["C:/Users/sorio/Desktop/click/naver-api/src/App.js"],"names":["RenderAfterNavermapsLoaded","NaverMap","Rectangle","withNavermaps","React","Rect","props","App","Component","constructor","navermaps","state","rect","handleBoundsChanged","bind","goToDokdo","dokdo","LatLngBounds","LatLng","changeBounds","bounds","setState","rectTimeout","clearTimeout","setTimeout","render","ref","mapRef","width","height","componentDidMount","getBounds","EnhancedApp"],"mappings":"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","sourcesContent":["import {\n  RenderAfterNavermapsLoaded,\n  NaverMap,\n  Rectangle,\n} from \"react-naver-maps\";\nimport { withNavermaps } from \"react-naver-maps/hocs\";\nimport React from \"react\";\n\nconst Rect = (props) => (\n  <Rectangle\n    strokeOpacity={0}\n    strokeWeight={0}\n    fillOpacity={0.2}\n    fillColor={\"#f00\"}\n    {...props}\n  />\n);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const { navermaps } = props;\n\n    this.state = {\n      rect: null,\n    };\n    this.handleBoundsChanged = this.handleBoundsChanged.bind(this);\n    this.goToDokdo = this.goToDokdo.bind(this);\n\n    this.dokdo = new navermaps.LatLngBounds(\n      new navermaps.LatLng(37.2380651, 131.8562652),\n      new navermaps.LatLng(37.2444436, 131.8786475)\n    );\n  }\n\n  changeBounds(bounds) {\n    this.setState({ bounds });\n\n    if (this.rectTimeout) clearTimeout(this.rectTimeout);\n    this.rectTimeout = setTimeout(() => {\n      this.setState({ rect: <Rect bounds={this.state.bounds} /> });\n    }, 500);\n  }\n\n  goToDokdo() {\n    this.setState({ bounds: this.dokdo });\n  }\n\n  handleBoundsChanged(bounds) {\n    this.changeBounds(bounds);\n  }\n\n  render() {\n    const { navermaps } = this.props;\n\n    return (\n      <NaverMap\n        naverRef={(ref) => {\n          this.mapRef = ref;\n        }}\n        id=\"maps-examples-map-bounds\"\n        style={{\n          width: \"100%\",\n          height: \"600px\",\n        }}\n        defaultCenter={new navermaps.LatLng(37.5666805, 126.9784147)}\n        defaultZoom={5}\n        bounds={this.state.bounds}\n        onBoundsChanged={this.handleBoundsChanged}\n      >\n        <Buttons>\n          <ControlBtn onClick={this.goToDokdo}>독도로 이동하기</ControlBtn>\n        </Buttons>\n        {this.state.rect}\n      </NaverMap>\n    );\n  }\n\n  componentDidMount() {\n    // map이 생성될 때의 bounds를 알기 위해 method를 이용합니다.\n    this.changeBounds(this.mapRef.getBounds());\n  }\n}\n\nconst EnhancedApp = withNavermaps(App);\n\n<RenderAfterNavermapsLoaded clientId={\"pg43l9dp5c\"}>\n  <EnhancedApp />\n</RenderAfterNavermapsLoaded>;\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}